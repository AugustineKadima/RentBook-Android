// Generated by view binder compiler. Do not edit!
package com.moringaschool.rentbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.moringaschool.rentbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TenantListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView tenantDisplayEmail;

  @NonNull
  public final TextView tenantDisplayName;

  @NonNull
  public final TextView tenantDisplayRoom;

  private TenantListItemBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView tenantDisplayEmail, @NonNull TextView tenantDisplayName,
      @NonNull TextView tenantDisplayRoom) {
    this.rootView = rootView;
    this.tenantDisplayEmail = tenantDisplayEmail;
    this.tenantDisplayName = tenantDisplayName;
    this.tenantDisplayRoom = tenantDisplayRoom;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TenantListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TenantListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tenant_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TenantListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tenant_display_email;
      TextView tenantDisplayEmail = ViewBindings.findChildViewById(rootView, id);
      if (tenantDisplayEmail == null) {
        break missingId;
      }

      id = R.id.tenant_display_name;
      TextView tenantDisplayName = ViewBindings.findChildViewById(rootView, id);
      if (tenantDisplayName == null) {
        break missingId;
      }

      id = R.id.tenant_display_room;
      TextView tenantDisplayRoom = ViewBindings.findChildViewById(rootView, id);
      if (tenantDisplayRoom == null) {
        break missingId;
      }

      return new TenantListItemBinding((RelativeLayout) rootView, tenantDisplayEmail,
          tenantDisplayName, tenantDisplayRoom);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
